pair<int, int> predecessorSuccessor(TreeNode *root, int key)
{
    TreeNode *temp = root;
    int prec = -1;
    int succ = -1;
    while (temp->data != key)
    {

        if (temp->data > key)
        {
            succ = temp->data;
            temp = temp->left;
        }
        else
        {
            prec = temp->data;
            temp = temp->right;
        }
    }

    // precc and sucessor of node

    // prec

    TreeNode *leftTree = temp->left;

    while (leftTree != NULL)
    {
        prec = leftTree->data;
        leftTree = leftTree->right;
    }
    
    // succ 
    
    TreeNode *rightTree = temp->right;

    while (rightTree != NULL)
    {
        succ = rightTree->data;
        rightTree = rightTree->left;
    }

    pair<int, int> ans = make_pair(prec, succ);
    return ans;
}
