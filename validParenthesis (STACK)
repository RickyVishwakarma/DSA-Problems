bool isValidParenthesis(string s)
{
    stack<char> st;

    for(int i = 0; i < s.length(); i++) {
        char ch = s[i];

        if(ch == '[' || ch == '(' || ch == '{') {
            st.push(ch);
        } else {
            if(st.empty()) {
                return false; 
            }

            char top = st.top(); 
            st.pop(); // 

            if((ch == ']' && top != '[') || (ch == ')' && top != '(') || (ch == '}' && top != '{')) {
                return false; 
            }
        }
    }

    if(st.empty()) {
        return true; 
    } else {
        return false;
    }   

}
