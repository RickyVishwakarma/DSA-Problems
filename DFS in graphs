class Solution {
  public:
    void dfs(int node, vector<int> adj[], vector<int> &vis, vector<int> &ls) {
        vis[node] = 1;
        ls.push_back(node);
        for (auto it : adj[node]) {
            if (!vis[it]) {
                dfs(it, adj, vis, ls);
            }
        }
    }

    
    // Function to return a list containing the DFS traversal of the graph.
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        vector<int> vis(V, 0); // Use a vector instead of an array for vis
        // int vis[V] = {0};
        int start = 0;
        vector<int> ls;

        dfs(start, adj, vis, ls);
        return ls;
    }
};
